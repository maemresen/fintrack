# Define Docker-in-Docker service for building and testing Docker images
services:
    - name: docker:dind
      command: ["--tls=false"]

# Set global variables used throughout the pipeline
variables:
    MAVEN_IMAGE: "maven:3.9.3-amazoncorretto-17"

# Define the stages that make up the pipeline
stages:
    - build
    - test
    - quality

# Configure caching to speed up Maven builds by reusing dependencies
cache:
    paths:
        - ~/.m2/repository

# Stage for building the Maven project
maven_build:
    image: $MAVEN_IMAGE
    stage: build
    script:
        - mvn clean package

# Stage for running unit tests and generating code coverage report
unit_tests:
    image: $MAVEN_IMAGE
    stage: test
    script:
        - mvn verify -PunitTest,codeCoverage
    artifacts:
        paths:
            - fintrack-api/target/site/jacoco/jacoco.xml

# Stage for converting Jacoco code coverage report to Cobertura format
coverage_report:
    # This stage should be placed after the stage that generates Jacoco coverage report
    stage: test
    needs:
        - unit_tests
    image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.7
    script:
        # Convert Jacoco report to Cobertura, specifying paths and output location
        - python /opt/cover2cover.py fintrack-api/target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/fintrack-api/src/main/java/ > cobertura.xml
    artifacts:
        reports:
            coverage_report:
                coverage_format: cobertura
                path: cobertura.xml

# Stage for running integration tests on the 'main' branch
integration_tests:
    image: $MAVEN_IMAGE
    stage: test
    only:
        - main
    needs:
        - unit_tests
    script:
        - mvn verify -PintegrationTest
